/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package Assignment;

import java.io.BufferedReader;
import java.io.File;
import java.io.FileReader;
import java.io.IOException;
import java.time.LocalDate;
import java.time.format.DateTimeFormatter;
import javax.swing.JOptionPane;

/**
 *
 * @author User
 */
public class LecViewAppointments extends javax.swing.JFrame {

    /**
     * Creates new form LecViewAppointments
     */
    public LecViewAppointments() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        NameCombo_button = new javax.swing.JComboBox<>();
        Search_button = new javax.swing.JButton();
        Back_button = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        Appointment_area = new javax.swing.JTextArea();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("Lecturer Name :");

        NameCombo_button.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Prof. Ali", "Prof. Abu", "Prof. Lee", "Hang Tuah" }));

        Search_button.setText("Search");
        Search_button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Search_buttonActionPerformed(evt);
            }
        });

        Back_button.setText("Dashboard");
        Back_button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Back_buttonActionPerformed(evt);
            }
        });

        Appointment_area.setColumns(20);
        Appointment_area.setRows(5);
        jScrollPane1.setViewportView(Appointment_area);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(18, 18, 18)
                        .addComponent(NameCombo_button, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 138, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(Back_button)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(Search_button)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(NameCombo_button, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Search_button)
                    .addComponent(Back_button))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 213, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void Back_buttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Back_buttonActionPerformed
        LecturerDashboardUI lecturerdashboard = new LecturerDashboardUI();
        lecturerdashboard.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_Back_buttonActionPerformed

    private void Search_buttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Search_buttonActionPerformed
        // Get selected lecturer from NameCombo_button
    String selectedLecturer = NameCombo_button.getSelectedItem().toString();

    // Check if a valid lecturer is selected
    if (selectedLecturer.equals("Choose")) {
        JOptionPane.showMessageDialog(this, "Please select a Lecturer.", "Validation Error", JOptionPane.ERROR_MESSAGE);
        return;  // Exit the method if no lecturer is selected
    }

    // Get current date (real-time date check)
    LocalDate currentDate = LocalDate.now();  // Current date
    DateTimeFormatter formatter = DateTimeFormatter.ofPattern("yyyy-MM-dd"); // Date format in the file

    // Read from consultations.txt and display appointments for the selected lecturer
    File consultationsFile = new File("consultations.txt");
    if (!consultationsFile.exists()) {
        JOptionPane.showMessageDialog(this, "The consultations file does not exist.", "Error", JOptionPane.ERROR_MESSAGE);
        return;
    }

    // Clear the display area before showing new results (assuming you have a JTextArea or similar to display)
    Appointment_area.setText(""); // Assuming Appointment_area is a JTextArea for displaying results

    try (BufferedReader br = new BufferedReader(new FileReader(consultationsFile))) {
        String line;
        boolean foundAppointments = false;

        // Iterate through each line in the file
        while ((line = br.readLine()) != null) {
            String[] data = line.split(",");
            if (data.length == 4) {
                String storedLecturer = data[0].trim();
                String storedDate = data[1].trim();
                String storedTime = data[2].trim();
                String studentName = data[3].trim();

                // Check if the lecturer matches the selected one
                if (storedLecturer.equals(selectedLecturer)) {
                    // Parse the date to compare with current date
                    LocalDate appointmentDate = LocalDate.parse(storedDate, formatter);

                    // Determine if the appointment is in the future or has passed
                    String appointmentStatus = (appointmentDate.isAfter(currentDate)) ? "Upcoming" : "Past";

                    // Append the appointment details to the Appointment_area
                    Appointment_area.append("Lecturer: " + storedLecturer + "\n");
                    Appointment_area.append("Date: " + storedDate + " (" + appointmentStatus + ")\n");
                    Appointment_area.append("Time: " + storedTime + "\n");
                    Appointment_area.append("Student: " + studentName + "\n");
                    Appointment_area.append("-------------------------------\n");
                    foundAppointments = true;
                }
            }
        }

        // If no appointments were found for the selected lecturer
        if (!foundAppointments) {
            Appointment_area.append("No appointments found for " + selectedLecturer + ".\n");
        }

    } catch (IOException e) {
        JOptionPane.showMessageDialog(this, "Error reading the consultations file.", "Error", JOptionPane.ERROR_MESSAGE);
        e.printStackTrace();
    }
    }//GEN-LAST:event_Search_buttonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(LecViewAppointments.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(LecViewAppointments.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(LecViewAppointments.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(LecViewAppointments.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new LecViewAppointments().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextArea Appointment_area;
    private javax.swing.JButton Back_button;
    private javax.swing.JComboBox<String> NameCombo_button;
    private javax.swing.JButton Search_button;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables
}
