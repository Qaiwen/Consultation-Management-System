/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package Assignment;

import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.util.Arrays;
import java.util.HashSet;
import java.util.Set;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;

/**
 *
 * @author User
 */
public class RegisterUI extends javax.swing.JFrame {

    /**
     * Creates new form RegisterUI
     */
    public RegisterUI() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        Username_label = new javax.swing.JLabel();
        Password_label = new javax.swing.JLabel();
        Combo_button = new javax.swing.JComboBox<>();
        Username_field = new javax.swing.JTextField();
        Password_field = new javax.swing.JTextField();
        Register_button = new javax.swing.JButton();
        LogIn_button = new javax.swing.JButton();
        LecturerID_label = new javax.swing.JLabel();
        LecturerID_field = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel1.setText("Register");

        Username_label.setText("Username :");

        Password_label.setText("Password :");

        Combo_button.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Lecturer", "Student" }));
        Combo_button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Combo_buttonActionPerformed(evt);
            }
        });

        Username_field.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Username_fieldActionPerformed(evt);
            }
        });

        Password_field.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Password_fieldActionPerformed(evt);
            }
        });

        Register_button.setText("Register");
        Register_button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Register_buttonActionPerformed(evt);
            }
        });

        LogIn_button.setText("Back to Log In");
        LogIn_button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                LogIn_buttonActionPerformed(evt);
            }
        });

        LecturerID_label.setText("Lecturer ID :");

        LecturerID_field.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                LecturerID_fieldActionPerformed(evt);
            }
        });

        jLabel2.setText("e.g., (INS1234)");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(168, 168, 168)
                        .addComponent(jLabel1))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(36, 36, 36)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(Username_label)
                            .addComponent(Password_label)
                            .addComponent(LecturerID_label)
                            .addComponent(Combo_button, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(67, 67, 67)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(Register_button)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(Username_field)
                                        .addComponent(Password_field, javax.swing.GroupLayout.DEFAULT_SIZE, 186, Short.MAX_VALUE)))
                                .addComponent(LecturerID_field, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 186, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(28, 28, 28)
                        .addComponent(LogIn_button)))
                .addContainerGap(36, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Username_label)
                    .addComponent(Username_field, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(20, 20, 20)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Password_label)
                    .addComponent(Password_field, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(LecturerID_label)
                    .addComponent(LecturerID_field, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2)
                    .addComponent(Combo_button, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 34, Short.MAX_VALUE)
                .addComponent(Register_button)
                .addGap(8, 8, 8)
                .addComponent(LogIn_button)
                .addGap(23, 23, 23))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void Register_buttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Register_buttonActionPerformed
     // Predefined valid Instructor IDs
    Set<String> validInstructorIDs = new HashSet<>(Arrays.asList("INS1234", "INS5678", "INS9012"));

    // Get values from the fields
    String username = Username_field.getText();
    String password = Password_field.getText();
    String role = Combo_button.getSelectedItem().toString();
    String LecturerID = LecturerID_field.getText();

    // Validate fields
    if (username.isEmpty() || password.isEmpty()) {
        JOptionPane.showMessageDialog(this, "Username and Password are required.", "Error", JOptionPane.ERROR_MESSAGE);
        return;
    }

    // Check if the username already exists
    File userFile = new File("user_data.txt");
    try (BufferedReader reader = new BufferedReader(new FileReader(userFile))) {
        String line;
        while ((line = reader.readLine()) != null) {
            if (line.startsWith("Username: ")) {
                String existingUsername = line.substring(10).trim(); // Extract username after "Username: "
                if (existingUsername.equals(username)) {
                    JOptionPane.showMessageDialog(this, "Username already exists! Please choose a different username.", "Error", JOptionPane.ERROR_MESSAGE);
                    return;
                }
            }
        }
    } catch (IOException e) {
        // If file doesn't exist, that's fine as we'll create it
        e.printStackTrace();
    }

    if (role.equals("Lecturer")) {
        if (LecturerID.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Lecturer ID is required for Instructors.", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }

        // Check if the entered Instructor ID is valid
        if (!validInstructorIDs.contains(LecturerID)) {
            JOptionPane.showMessageDialog(this, "Invalid Lecturer ID. Please try again.", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }
    }

    // Save user data to user_data.txt
    try (BufferedWriter writer = new BufferedWriter(new FileWriter(userFile, true))) {
        writer.write("Username: " + username);
        writer.newLine();
        writer.write("Password: " + password);
        writer.newLine();
        writer.write("Role: " + role);
        writer.newLine();
        if (role.equals("Lecturer")) {
            writer.write("Lecturer ID: " + LecturerID);
            writer.newLine();
        }
        writer.write("---------------");
        writer.newLine();

        // Notify user of successful registration
        JOptionPane.showMessageDialog(this, "Registration successful! You can now log in.", "Success", JOptionPane.INFORMATION_MESSAGE);

        // Redirect back to login
        new LoginUI().setVisible(true);
        this.dispose(); // Close the current RegisterUI window
    } catch (IOException e) {
        JOptionPane.showMessageDialog(this, "Error saving user data.", "Error", JOptionPane.ERROR_MESSAGE);
        e.printStackTrace();
    }
    }//GEN-LAST:event_Register_buttonActionPerformed

    private void Combo_buttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Combo_buttonActionPerformed
        String selectedRole = Combo_button.getSelectedItem().toString();

    if (selectedRole.equals("Lecturer")) {
        // Show InstructorID field
        LecturerID_label.setVisible(true);
        LecturerID_field.setVisible(true);
    } else {
        // Hide InstructorID field for other roles
        LecturerID_label.setVisible(false);
        LecturerID_field.setVisible(false);
    }

    // Refresh the GUI to reflect changes
    getContentPane().revalidate();
    getContentPane().repaint();
    }//GEN-LAST:event_Combo_buttonActionPerformed

    private void Username_fieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Username_fieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_Username_fieldActionPerformed

    private void Password_fieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Password_fieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_Password_fieldActionPerformed

    private void LogIn_buttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_LogIn_buttonActionPerformed
        LoginUI LoginUIscreen = new LoginUI();
        this.setVisible(false);
        LoginUIscreen.setVisible(true);
    }//GEN-LAST:event_LogIn_buttonActionPerformed

    private void LecturerID_fieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_LecturerID_fieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_LecturerID_fieldActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(RegisterUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(RegisterUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(RegisterUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(RegisterUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new RegisterUI().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> Combo_button;
    private javax.swing.JTextField LecturerID_field;
    private javax.swing.JLabel LecturerID_label;
    private javax.swing.JButton LogIn_button;
    private javax.swing.JTextField Password_field;
    private javax.swing.JLabel Password_label;
    private javax.swing.JButton Register_button;
    private javax.swing.JTextField Username_field;
    private javax.swing.JLabel Username_label;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    // End of variables declaration//GEN-END:variables
}
